[{"D:\\frontend\\React JS\\facebook_two\\src\\index.js":"1","D:\\frontend\\React JS\\facebook_two\\src\\App.js":"2","D:\\frontend\\React JS\\facebook_two\\src\\reportWebVitals.js":"3","D:\\frontend\\React JS\\facebook_two\\src\\components\\Auth\\Auth.js":"4","D:\\frontend\\React JS\\facebook_two\\src\\components\\Auth\\Login.js":"5","D:\\frontend\\React JS\\facebook_two\\src\\components\\Auth\\LoggedinAccounts.js":"6","D:\\frontend\\React JS\\facebook_two\\src\\apis\\Login.js":"7","D:\\frontend\\React JS\\facebook_two\\src\\components\\Home\\Home.js":"8","D:\\frontend\\React JS\\facebook_two\\src\\apis\\Signin.js":"9","D:\\frontend\\React JS\\facebook_two\\src\\components\\Home\\Nav.js":"10","D:\\frontend\\React JS\\facebook_two\\src\\components\\Home\\Links.js":"11","D:\\frontend\\React JS\\facebook_two\\src\\components\\Home\\Wall.js":"12","D:\\frontend\\React JS\\facebook_two\\src\\components\\Home\\Contents.js":"13","D:\\frontend\\React JS\\facebook_two\\src\\components\\Home\\LeftNavLink.js":"14","D:\\frontend\\React JS\\facebook_two\\src\\components\\Posts\\Posts.js":"15","D:\\frontend\\React JS\\facebook_two\\src\\apis\\GetPosts.js":"16","D:\\frontend\\React JS\\facebook_two\\src\\components\\Posts\\Post.js":"17","D:\\frontend\\React JS\\facebook_two\\src\\apis\\PostActions.js":"18","D:\\frontend\\React JS\\facebook_two\\src\\components\\Posts\\Comments.js":"19","D:\\frontend\\React JS\\facebook_two\\src\\components\\Posts\\CommentAdd.js":"20","D:\\frontend\\React JS\\facebook_two\\src\\components\\Profile\\Profile.js":"21","D:\\frontend\\React JS\\facebook_two\\src\\Utils\\generalFunctions.js":"22","D:\\frontend\\React JS\\facebook_two\\src\\components\\Profile\\RecoverPassword.js":"23","D:\\frontend\\React JS\\facebook_two\\src\\components\\Addresses\\Addresses.js":"24","D:\\frontend\\React JS\\facebook_two\\src\\apis\\GeoLocation.js":"25","D:\\frontend\\React JS\\facebook_two\\src\\components\\Files\\Files.js":"26","D:\\frontend\\React JS\\facebook_two\\src\\apis\\Files.js":"27","D:\\frontend\\React JS\\facebook_two\\src\\components\\Data\\data.js":"28","D:\\frontend\\React JS\\facebook_two\\src\\components\\Files\\DragAndDrop.js":"29","D:\\frontend\\React JS\\facebook_two\\src\\components\\Data\\Data.js":"30","D:\\frontend\\React JS\\facebook_two\\src\\components\\Data\\TwinData.js":"31","D:\\frontend\\React JS\\facebook_two\\src\\components\\Data\\DataTwo.js":"32"},{"size":500,"mtime":1617991248925,"results":"33","hashOfConfig":"34"},{"size":1446,"mtime":1626978216972,"results":"35","hashOfConfig":"34"},{"size":362,"mtime":499162500000,"results":"36","hashOfConfig":"34"},{"size":821,"mtime":1619400946195,"results":"37","hashOfConfig":"34"},{"size":11229,"mtime":1624779759988,"results":"38","hashOfConfig":"34"},{"size":1396,"mtime":1617872857840,"results":"39","hashOfConfig":"34"},{"size":1005,"mtime":1618854434743,"results":"40","hashOfConfig":"34"},{"size":1046,"mtime":1619283988261,"results":"41","hashOfConfig":"34"},{"size":459,"mtime":1618058394863,"results":"42","hashOfConfig":"34"},{"size":4024,"mtime":1621425670985,"results":"43","hashOfConfig":"34"},{"size":1378,"mtime":1618404057653,"results":"44","hashOfConfig":"34"},{"size":154,"mtime":1618402621913,"results":"45","hashOfConfig":"34"},{"size":175,"mtime":1618384652308,"results":"46","hashOfConfig":"34"},{"size":424,"mtime":1618401528889,"results":"47","hashOfConfig":"34"},{"size":3451,"mtime":1618770459117,"results":"48","hashOfConfig":"34"},{"size":284,"mtime":1618474327779,"results":"49","hashOfConfig":"34"},{"size":4668,"mtime":1618767949707,"results":"50","hashOfConfig":"34"},{"size":974,"mtime":1618766455402,"results":"51","hashOfConfig":"34"},{"size":660,"mtime":1618771143503,"results":"52","hashOfConfig":"34"},{"size":1157,"mtime":1619443416656,"results":"53","hashOfConfig":"34"},{"size":8912,"mtime":1618857676737,"results":"54","hashOfConfig":"34"},{"size":150,"mtime":1618836427446,"results":"55","hashOfConfig":"34"},{"size":4136,"mtime":1618857289277,"results":"56","hashOfConfig":"34"},{"size":10210,"mtime":1619587388523,"results":"57","hashOfConfig":"34"},{"size":276,"mtime":1618933671559,"results":"58","hashOfConfig":"34"},{"size":9670,"mtime":1619698547154,"results":"59","hashOfConfig":"34"},{"size":292,"mtime":1619706967934,"results":"60","hashOfConfig":"34"},{"size":1800,"mtime":1619720528609,"results":"61","hashOfConfig":"34"},{"size":2767,"mtime":1619706131870,"results":"62","hashOfConfig":"34"},{"size":6315,"mtime":1625312467741,"results":"63","hashOfConfig":"34"},{"size":1912,"mtime":1619788027766,"results":"64","hashOfConfig":"34"},{"size":2276,"mtime":1619934094688,"results":"65","hashOfConfig":"34"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},"17cwv1r",{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"68"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"68"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"68"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":1,"source":"105","usedDeprecatedRules":"68"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"68"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"68"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"68"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"68"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"68"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":1,"source":"125","usedDeprecatedRules":"68"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"68"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"135","messages":"136","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"68"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"68"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"68"},"D:\\frontend\\React JS\\facebook_two\\src\\index.js",[],["147","148"],"D:\\frontend\\React JS\\facebook_two\\src\\App.js",[],"D:\\frontend\\React JS\\facebook_two\\src\\reportWebVitals.js",[],"D:\\frontend\\React JS\\facebook_two\\src\\components\\Auth\\Auth.js",[],"D:\\frontend\\React JS\\facebook_two\\src\\components\\Auth\\Login.js",["149","150","151","152","153","154","155","156","157","158","159","160"],"import { Link, useHistory } from \"react-router-dom\";\r\nimport { useState } from 'react';\r\nimport { LoginApi } from '../../apis/Login';\r\nimport { SigninApi } from \"../../apis/Signin\";\r\nconst Login = () => {\r\n\r\n\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [emailError, setEmailError] = useState(\"\");\r\n    const [passwordError, setPasswordError] = useState(\"\");\r\n    const [apiErrorMsg, setapiErrorMsg] = useState(\"\");\r\n\r\n    const [showSignupDialog, setShowSignupDialog] = useState(false);\r\n\r\n\r\n\r\n    const history = useHistory();\r\n\r\n    /*signup api in */\r\n\r\n\r\n    /*signup api out */\r\n    /* Signup variables begin*/\r\n    const [crName, setCrName] = useState(\"\");\r\n    const [crEmail, setCrEmail] = useState(\"\");\r\n    const [crCountryCode, setCrCountryCode] = useState(\"\");\r\n    const [crMobile, setCrMobile] = useState(\"\");\r\n    const [crPword, setCrPword] = useState(\"\");\r\n    const [crConfirmPword, setCrConfirmPword] = useState(\"\");\r\n    const [crGender, setCrGender] = useState(\"\");\r\n\r\n    const [crNameErMsg, setCrNameErMsg] = useState(\"\");\r\n    const [crEmailErMsg, setCrEmailErMsg] = useState(\"\");\r\n    const [crCountryCodeErMsg, setCrCountryCodeErMsg] = useState(\"\");\r\n    const [crMobileErMsg, setCrMobileErMsg] = useState(\"\");\r\n    const [crPwordErMsg, setCrPwordErMsg] = useState(\"\");\r\n    const [crConfirmPwordErMsg, setCrConfirmPwordErMsg] = useState(\"\");\r\n    const [crGenderErMsg, setCrGenderErMsg] = useState(\"\");\r\n\r\n    const [signupApiErMsg, setSignupApiErMsg] = useState(\"\");\r\n\r\n    /* Signup variables end */\r\n    let loginClicked = () => {\r\n\r\n        let regex = /^([a-zA-Z0-9_.+-])+\\@(([a-zA-Z0-9-])+\\.)+([a-zA-Z0-9]{2,4})+$/;\r\n\r\n\r\n        if (regex.test(email) == false) {\r\n            setEmailError(\"enter valid email\");\r\n        }\r\n        else {\r\n            setEmailError(\"\");\r\n        }\r\n\r\n        if (password.length < 6) {\r\n            setPasswordError(\"enter valid password\");\r\n        }\r\n        else {\r\n            setPasswordError(\"\");\r\n        }\r\n\r\n\r\n        if (regex.test(email) == true && password.length >= 6) {\r\n            LoginApi(email, password).then(\r\n                (response) => {\r\n                    let data = response.data;\r\n                    if (data.result == \"failed\") {\r\n                        setapiErrorMsg(data.msg);\r\n                    }\r\n                    else {\r\n                        setapiErrorMsg(\"\");\r\n                        localStorage.setItem(\"user_id\", data.data.user_id);\r\n                        localStorage.setItem(\r\n                            \"profile_pic\",\r\n                            data.data.profile_pic\r\n                        );\r\n                        localStorage.setItem(\"user_name\", data.data.user_name);\r\n                        history.push(\"/home\");\r\n                        // console.log(data.data.user_id);\r\n                    }\r\n                    // console.log(\"api response\",response)\r\n                }\r\n            );\r\n        }\r\n    };\r\n\r\n\r\n    const createAccountBtn = () => {\r\n        setShowSignupDialog(true);\r\n    };\r\n\r\n    const hideSignupDIalog = () => {\r\n        setShowSignupDialog(false);\r\n    };\r\n\r\n    const createAccountSubmitted = () => {\r\n\r\n        let noOfErros = 0;\r\n\r\n        console.log(crName, crEmail, crCountryCode, crMobile, crPword, crConfirmPword, crGender);\r\n\r\n        if (crName.length < 2) {\r\n            setCrNameErMsg(\"required\");\r\n            noOfErros = 1;\r\n        }\r\n        else {\r\n            setCrNameErMsg(\"\");\r\n\r\n        }\r\n        let regex = /^([a-zA-Z0-9_.+-])+\\@(([a-zA-Z0-9-])+\\.)+([a-zA-Z0-9]{2,4})+$/;\r\n        if (!regex.test(crEmail)) {\r\n            setCrEmailErMsg(\"please enter an email\");\r\n            noOfErros = 1;\r\n        }\r\n        else {\r\n            setCrEmailErMsg(\"\");\r\n        }\r\n        if (crCountryCode.value == \"\") {\r\n            setCrCountryCodeErMsg(\"required\");\r\n            noOfErros = 1;\r\n        }\r\n        else {\r\n            setCrCountryCodeErMsg(\"\");\r\n        }\r\n\r\n        if (crMobile.length < 10) {\r\n            noOfErros = 1;\r\n            setCrMobileErMsg(\"enter valid mobile number\");\r\n        }\r\n        else {\r\n            setCrMobileErMsg(\"\");\r\n        }\r\n\r\n        if (crPword.length == 0) {\r\n            setCrPwordErMsg(\"required\");\r\n            noOfErros = 1;\r\n        }\r\n        else if (crConfirmPword != crPword) {\r\n            setCrConfirmPwordErMsg(\"password does't matching\");\r\n            noOfErros = 1;\r\n        }\r\n        else {\r\n            setCrConfirmPwordErMsg(\"\");\r\n            setCrPwordErMsg(\"\");\r\n        }\r\n\r\n        if (noOfErros == 0) {\r\n            // console.log(\"call api\");\r\n            SigninApi(crName, crEmail, crCountryCode, crMobile, crPword, \"api\").then\r\n                (response => {\r\n\r\n                    let data = response.data;\r\n                    if (data.result == \"failed\") {\r\n                        setSignupApiErMsg(data.msg);\r\n                    }\r\n                    else {\r\n                        setSignupApiErMsg(\"\");\r\n                        localStorage.setItem(\"user_id\", data.data.user_id);\r\n                        localStorage.setItem(\"profile_pic\", data.data.profile_pic);\r\n                        localStorage.setItem(\"user_name\", data.data.user_name);\r\n\r\n                        history.push(\"/home\");\r\n                    }\r\n                    // console.log(response.data);\r\n                    // console.log(response.data.msg);\r\n                });\r\n        }\r\n    };\r\n\r\n\r\n    return (\r\n        <>\r\n            <div className=\"card p-3  fb-shadow m-5\">\r\n                <input type=\"email\" value={email} onChange={e => setEmail(e.target.value)} className=\"form-control mt-2\" placeholder=\"Email address or phone number \" />\r\n                <span className=\"text-danger\">{emailError}</span>\r\n                <input type=\"password\" value={password} onChange={e => setPassword(e.target.value)} className=\"form-control mt-2 \" placeholder=\"Password\" />\r\n                <span className=\"text-danger\">{passwordError}</span>\r\n                <button type=\"button\" onClick={loginClicked} className=\"btn btn-primary btn-block mt-3 mb-2 font-weight-bold\">Login</button>\r\n                <p className=\"text-danger\">{apiErrorMsg}</p>\r\n                <Link to=\"forget-password\" className=\"text-primary m-3 text-center\">Forget Password</Link>\r\n                <hr />\r\n                <button type=\"button\" onClick={createAccountBtn} className=\"btn btn-success p-2 ml-5 mr-5  font-weight-bold border-0\">Create Account</button>\r\n            </div>\r\n            <div className=\"text-center\"><b>Create a Page </b>for a celebrity, band or business.</div>\r\n            {/* <p>password:{password}</p> */}\r\n\r\n\r\n\r\n            {showSignupDialog && <div className=\"modal fade show fb-modal\" tabIndex=\"-1\">\r\n                <div className=\"modal-dialog\">\r\n                    <div className=\"modal-content\">\r\n                        <div className=\"modal-header\">\r\n                            <h5 className=\"modal-title\">Sign Up</h5>\r\n\r\n                            {/* <p className=\"modal-title\">It's quick and easy.</p> */}\r\n                            <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\" onClick={hideSignupDIalog}>\r\n                                <span aria-hidden=\"true\">&times;</span>\r\n                            </button>\r\n                        </div>\r\n                        <div className=\"modal-body\">\r\n                            <div className=\"row\">\r\n                                <div className=\"col-lg-12 mt-3\">\r\n                                    <input type=\"text\" className=\"form-control\" placeholder=\"Name\" value={crName} onChange={e => setCrName(e.target.value)} />\r\n                                    <small className=\"text-danger\">{crNameErMsg}</small>\r\n                                </div>\r\n                                <div className=\"col-lg-12 mt-3\">\r\n                                    <input type=\"text\" className=\"form-control\" placeholder=\"Email\" value={crEmail} onChange={e => setCrEmail(e.target.value)} />\r\n                                    <small className=\"text-danger\">{crEmailErMsg}</small>\r\n                                    <p className=\"text-danger\">{signupApiErMsg}</p>\r\n                                </div>\r\n                                <div className=\"col-lg-3 mt-3\">\r\n                                    <select className=\"custom-select\" value={crCountryCode} onChange={e => setCrCountryCode(e.target.value)}>\r\n                                        <option value=\"91\">91</option>\r\n                                        <option value=\"1\">1</option>\r\n                                    </select>\r\n                                    <small className=\"text-danger\">{crCountryCodeErMsg}</small>\r\n                                </div>\r\n                                <div className=\"col-lg-9 mt-3\">\r\n                                    <input type=\"text\" className=\"form-control\" placeholder=\"Mobile\" value={crMobile} onChange={e => setCrMobile(e.target.value)} />\r\n                                    <small className=\"text-danger\">{crMobileErMsg}</small>\r\n                                </div>\r\n\r\n                                <div className=\"col-lg-6 mt-3\">\r\n                                    <input type=\"password\" className=\"form-control\" placeholder=\"password\" value={crPword} onChange={e => setCrPword(e.target.value)} />\r\n                                    <small className=\"text-danger\">{crPwordErMsg}</small>\r\n                                </div>\r\n                                <div className=\"col-lg-6 mt-3\">\r\n                                    <input type=\"password\" className=\"form-control\" placeholder=\"Confirm password\" value={crConfirmPword} onChange={e => setCrConfirmPword(e.target.value)} />\r\n                                    <small className=\"text-danger\">{crConfirmPwordErMsg}</small>\r\n                                </div>\r\n                                <div className=\"col-lg-3 m-3 form-control\">\r\n                                    <input type=\"radio\" name=\"gender\" value=\"female\" onChange={e => setCrGender(e.target.value)} />&nbsp;&nbsp;female\r\n                                </div>\r\n                                <div className=\"col-lg-3 m-3 form-control\">\r\n                                    <input type=\"radio\" name=\"gender\" value=\"male\" onChange={e => setCrGender(e.target.value)} />&nbsp;&nbsp;male\r\n                                </div>\r\n                                <div className=\"col-lg-3 m-3 form-control\">\r\n                                    <input type=\"radio\" name=\"gender\" value=\"custom\" onChange={e => setCrGender(e.target.value)} />&nbsp;&nbsp;custom\r\n                                </div>\r\n                                <div className=\"col-lg-12 mt-4 text-center\">\r\n                                    <button className=\"btn  btn-success\" onClick={createAccountSubmitted} >Create Account</button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            }\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Login;","D:\\frontend\\React JS\\facebook_two\\src\\components\\Auth\\LoggedinAccounts.js",[],"D:\\frontend\\React JS\\facebook_two\\src\\apis\\Login.js",[],"D:\\frontend\\React JS\\facebook_two\\src\\components\\Home\\Home.js",[],"D:\\frontend\\React JS\\facebook_two\\src\\apis\\Signin.js",[],"D:\\frontend\\React JS\\facebook_two\\src\\components\\Home\\Nav.js",["161","162"],"import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { faHome } from '@fortawesome/free-solid-svg-icons';\r\nimport { faTwitter } from '@fortawesome/free-brands-svg-icons';\r\n\r\nconst Nav = () => {\r\n\r\n    const [navDataClass, setNavDataClass] = useState(\"collapse navbar-collapse\");\r\n    const [ToggleNavStatus, setToggleNavStatus] = useState(false);\r\n\r\n    const toggleMenu = () => {\r\n        if (ToggleNavStatus == false) {\r\n            setNavDataClass(\"collapse navbar-collapse show\");\r\n            setToggleNavStatus(true);\r\n        }\r\n        else {\r\n            setNavDataClass(\"collapse navbar-collapse\");\r\n            setToggleNavStatus(false);\r\n        }\r\n    };\r\n    return (\r\n        <>\r\n            <nav className=\"fixed-top navbar navbar-expand-lg navbar-light bg-light\">\r\n                {/*Logo*/}\r\n                <a hreaf=\"#\" className=\"navbar-brand\">\r\n                    Facebook\r\n                </a>\r\n                {/*navbar tag icon */}\r\n                <button className=\"navbar-toggler\"\r\n                    type=\"button\"\r\n                    data-toggle=\"collapse\"\r\n                    data-target=\"#navbarSupportedContent\"\r\n                    aria-controls=\"navbarSupportedContent\"\r\n                    aria-expanded=\"false\"\r\n                    aria-label=\"Toggle navigation\"\r\n                    onClick={toggleMenu}\r\n                >\r\n                    <span className=\"navbar-toggler-icon\"></span>\r\n                </button>\r\n\r\n                <div className={navDataClass} id=\"navbarSupportedContent\">\r\n                    <ul className=\"navbar-nav mr-auto\">\r\n                        <li className=\"nav-item \">\r\n                            <Link className=\"nav-link\" to=\"/home\">\r\n                                <FontAwesomeIcon icon={faHome} />\r\n                                Home\r\n                            </Link>\r\n                        </li>\r\n                        <li className=\"nav-item \">\r\n                            <Link className=\"nav-link active\" to=\"/friends\">\r\n                                <FontAwesomeIcon icon={faTwitter} />\r\n                                Friends\r\n                            </Link>\r\n                        </li>\r\n                        <li className=\"nav-item \">\r\n                            <Link className=\"nav-link\" to=\"/Groups\">\r\n                                Groups\r\n                            </Link>\r\n                        </li>\r\n\r\n                        <li className=\"nav-item\">\r\n                            <Link className=\"nav-link\" to=\"/profile\">\r\n                                Profile\r\n                            </Link>\r\n                        </li>\r\n\r\n                        <li className=\"nav-item\">\r\n                            <Link className=\"nav-link\" to=\"/addresses\">\r\n                                Addresses\r\n                            </Link>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <Link className=\"nav-link\" to=\"/files\">\r\n                                Files\r\n                            </Link>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <Link className=\"nav-link\" to=\"/data\">\r\n                                data\r\n                            </Link>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <Link className=\"nav-link\" to=\"/twindata\">\r\n                                TwinData\r\n                            </Link>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <Link className=\"nav-link\" to=\"/datatwo\">\r\n                                datatwo\r\n                            </Link>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n            </nav>\r\n        </>\r\n    );\r\n};\r\nexport default Nav;","D:\\frontend\\React JS\\facebook_two\\src\\components\\Home\\Links.js",["163","164"],"import { useState } from 'react';\r\nimport snow from '../../images/snow.jpg';\r\nimport LeftNavLink from './LeftNavLink';\r\nconst Links = () => {\r\n\r\n    const [linksData, setLinksData] = useState([\r\n        {\r\n            imagePath: \"https://scontent.fhyd14-2.fna.fbcdn.net/v/t1.6435-1/c56.0.332.332a/124166152_100435125221758_919992968816793874_n.jpg?_nc_cat=104&ccb=1-3&_nc_sid=dbb9e7&_nc_ohc=l81NhRI0AA8AX8JeVPW&_nc_ht=scontent.fhyd14-2.fna&tp=29&oh=199119ca8d758112750add162ee60a74&oe=609B8E78\",\r\n            titletext: \"Bhargava\"\r\n        },\r\n        {\r\n            imagePath: \"https://static.xx.fbcdn.net/rsrc.php/v3/yR/r/tInzwsw2pVX.png\",\r\n            titletext: \"abc\"\r\n        },\r\n        {\r\n            imagePath: \"https://scontent.fhyd14-2.fna.fbcdn.net/v/t1.6435-1/c56.0.332.332a/124166152_100435125221758_919992968816793874_n.jpg?_nc_cat=104&ccb=1-3&_nc_sid=dbb9e7&_nc_ohc=l81NhRI0AA8AX8JeVPW&_nc_ht=scontent.fhyd14-2.fna&tp=29&oh=199119ca8d758112750add162ee60a74&oe=609B8E78\",\r\n            titletext: \"Bhargava\"\r\n        },\r\n        {\r\n            imagePath: \"https://static.xx.fbcdn.net/rsrc.php/v3/yR/r/tInzwsw2pVX.png\",\r\n            titletext: \"abc\"\r\n        }\r\n    ])\r\n\r\n    return (\r\n        <>\r\n            {linksData.map((link, i) => (\r\n            <LeftNavLink linkData={link} key={i} />\r\n                   ))}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Links;","D:\\frontend\\React JS\\facebook_two\\src\\components\\Home\\Wall.js",[],"D:\\frontend\\React JS\\facebook_two\\src\\components\\Home\\Contents.js",[],"D:\\frontend\\React JS\\facebook_two\\src\\components\\Home\\LeftNavLink.js",[],"D:\\frontend\\React JS\\facebook_two\\src\\components\\Posts\\Posts.js",["165","166","167","168","169","170","171","172"],"\r\nimport { useState, useEffect } from \"react\";\r\nimport { getPostsApi } from '../../apis/GetPosts';\r\nimport { commentAddApi, postLikeApi, postUnLikeApi } from \"../../apis/PostActions\";\r\nimport Post from './Post';\r\n\r\nconst Posts = () => {\r\n    const [userId, setUserId] = useState(localStorage.getItem(\"user_id\"));\r\n    const [apiErrorMsg, setApiErrorMsg] = useState(\"\");\r\n    const [posts, setPosts] = useState([]);\r\n\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        getPostsApi(\"React App\", userId).then((response) => {\r\n            console.log(response);\r\n            const apiData = response.data;\r\n            if (apiData.result == \"success\") {\r\n                setApiErrorMsg(\"\");\r\n                setPosts(apiData.data);\r\n            } else {\r\n                setApiErrorMsg(apiData.msg);\r\n            }\r\n        });\r\n    }, [userId]);\r\n\r\n\r\n    const PostLiked = (post_id) => {\r\n        postLikeApi(\"react app\", userId, post_id).then(\r\n            (response) => {\r\n                // console.log(response);\r\n                if (response.data.result == \"success\") {\r\n\r\n                    setPosts(posts.map((post) => {\r\n\r\n                        if (post.post_id == post_id) {\r\n                            post.is_liked = \"true\";\r\n                        }\r\n                        return post;\r\n                    }));\r\n                    console.log(posts);\r\n                }\r\n            });\r\n    };\r\n\r\n    const postUnLiked = (post_id) => {\r\n        postUnLikeApi(\"react app\", userId, post_id).then(\r\n            (response) => {\r\n                // console.log(response);\r\n                if (response.data.result == \"success\") {\r\n                    setPosts(\r\n                        posts.map((post) => {\r\n                            if (post.post_id == post_id) {\r\n                                post.is_liked = \"false\";\r\n                            }\r\n                            return post;\r\n                        }));\r\n                }\r\n            }\r\n        )\r\n    };\r\n\r\n\r\n    const addComment = (post_id, comment) => {\r\n        commentAddApi(\"react app\", userId, post_id, comment).then(\r\n            (response) => {\r\n                if (response.data.result == \"success\") {\r\n                    setPosts(\r\n                        posts.map((post) => {\r\n                            if (post.post_id == post_id) {\r\n                                let newComment = {\r\n                                    comment: comment,\r\n                                    comment_id: \"1224\",\r\n                                    user_id: userId,\r\n                                    user_name: localStorage.getItem(\"user_name\"),\r\n                                    user_pic: localStorage.getItem(\"profile_pic\")\r\n                                };\r\n                                post.comments.push(newComment);\r\n                            }\r\n                            return post;\r\n                        })\r\n                    );\r\n                }\r\n            }\r\n        )\r\n    }\r\n    return (\r\n        <>\r\n            {posts.map((post, i) => (\r\n                <Post\r\n                    postData={post}\r\n                    key={i}\r\n                    onLikeClicked={PostLiked}\r\n                    onUnLikeClicked={postUnLiked}\r\n                    onCommentAdded={addComment}\r\n                />\r\n            ))\r\n            }\r\n            <p className=\"text-danger\">{apiErrorMsg}</p>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Posts;\r\n","D:\\frontend\\React JS\\facebook_two\\src\\apis\\GetPosts.js",[],"D:\\frontend\\React JS\\facebook_two\\src\\components\\Posts\\Post.js",["173","174","175","176","177","178","179","180"],"import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\r\nimport { faGlobeAsia, faThumbsUp, faLaugh } from '@fortawesome/free-solid-svg-icons';\r\nimport Comments from \"./Comments\";\r\nimport { useState } from 'react';\r\nimport CommentAdd from \"./CommentAdd\";\r\nconst Post = ({ postData, onLikeClicked, onUnLikeClicked, onCommentAdded }) => {\r\n\r\n\r\n\r\n    const [displayComments, setDisplayComments] = useState(false);\r\n\r\n    const displayCommentsClicked = () => {\r\n        setDisplayComments(true);\r\n    }\r\n\r\n    const likeClicked = () => {\r\n        console.log(\"like clicked\", postData.post_id);\r\n        onLikeClicked(postData.post_id);\r\n    };\r\n\r\n    const unLikeClicked = () => {\r\n        console.log(\"unLikeClicked\", postData.post_id);\r\n        onUnLikeClicked(postData.post_id);\r\n    };\r\n\r\n   \r\n\r\n    return (\r\n        <div className=\"card mt-4\">\r\n            <div className=\"card-body\">\r\n\r\n\r\n                {/* profile details */}\r\n                <div className=\"media\">\r\n                    <img src={postData.user_pic} alt=\"\" className=\"link-icon link-radius\" />\r\n                    <div className=\"media-body pl-2\">\r\n                        <h6 className=\"fb-no-margin-bottom\"> {postData.user_name}</h6>\r\n                        <br />\r\n                        <span className=\"text-secondary\">\r\n                            {postData.user_posted_on} &nbsp;\r\n                            <FontAwesomeIcon icon={faGlobeAsia} />\r\n                        </span>\r\n                    </div>\r\n                </div>\r\n                {/* Post text */}\r\n                <p className=\"mt-2\">{postData.post_desc}</p>\r\n            </div>\r\n\r\n            {postData.post_img.length > 0 && (\r\n                <a href={postData.post_url} target=\"_blank\">\r\n                    <img src={postData.post_img} alt=\"\" className=\"card-img-top\" />\r\n                </a>\r\n            )}\r\n\r\n            <div className=\"card-body\">\r\n                <div className=\"fb-left text-left\">\r\n                    {postData.laugh_count != undefined && (\r\n                        <FontAwesomeIcon icon={faLaugh} />\r\n                    )}\r\n\r\n                    {postData.likes_count != undefined && postData.is_liked == \"false\" && (\r\n                        <span>\r\n                            <FontAwesomeIcon icon={faThumbsUp} />{postData.likes_count}\r\n                        </span>\r\n                    )}\r\n                </div>\r\n                {/* ////// */}\r\n                <div className=\"fb-left\">\r\n\r\n                    {\r\n                        postData.likes_count != undefined && postData.is_liked == \"true\" && (\r\n                            <span>\r\n                                <FontAwesomeIcon icon={faThumbsUp} /> you &{postData.likes_count - 1} other liked this post\r\n                            </span>\r\n                        )\r\n                    }\r\n                </div>\r\n\r\n\r\n                {/* ////// */}\r\n\r\n\r\n                <div className='fb-right text-right'>Comments</div>\r\n            </div>\r\n\r\n            <div className=\"card-body\">\r\n                <hr />\r\n                <div className=\"row\">\r\n                    <div className=\"col-lg-3 text-center\">\r\n                        {\r\n                            postData.is_liked == \"true\" && (\r\n                                <div className=\"text-primary\" onClick={unLikeClicked}>\r\n                                    <FontAwesomeIcon icon={faThumbsUp} />Like\r\n                                </div>\r\n                            )}\r\n\r\n                        {\r\n                            postData.is_liked == \"false\" && (\r\n                                <div onClick={likeClicked}>\r\n                                    <FontAwesomeIcon icon={faThumbsUp} />Like\r\n                                </div>\r\n                            )}\r\n                    </div>\r\n                    <div className=\"col-lg-3 text-center\" onClick={displayCommentsClicked}>Comment</div>\r\n                    <div className=\"col-lg-3 text-center\">Share</div>\r\n                    <div className=\"col-lg-2 text-right\">Profile </div>\r\n                </div>\r\n            </div>\r\n\r\n\r\n            {\r\n                displayComments &&\r\n                <div className=\"card-body\"> <CommentAdd postid={postData.post_id} commentadd={onCommentAdded} /></div>\r\n            }\r\n\r\n\r\n            {\r\n                displayComments && <div className=\"card-body\">\r\n                    {postData.comments.map((comment, i) => (\r\n                        <Comments comment={comment} key={i} />\r\n                    )\r\n                    )}\r\n\r\n                </div>\r\n            }\r\n        </div>\r\n\r\n    );\r\n};\r\nexport default Post;","D:\\frontend\\React JS\\facebook_two\\src\\apis\\PostActions.js",[],"D:\\frontend\\React JS\\facebook_two\\src\\components\\Posts\\Comments.js",["181"],"import { useState } from \"react\";\r\n\r\nconst Comments = ({ comment }) => {\r\n\r\n    const [userId, setUserId] = useState(localStorage.getItem(\"user_id\"));\r\n    return (\r\n        <>\r\n            <div className=\"media mb-2\">\r\n                <img src={comment.user_pic} alt=\"pic\" className=\"link-icon link-radius\" />\r\n                <div className=\"media-body ,ml-2  fb-bg rounded-lg\">\r\n                    <strong>{comment.user_name}</strong>\r\n                    <p>\r\n                        {comment.comment} {userId + \",\" + comment.user_id}\r\n                    </p>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Comments;","D:\\frontend\\React JS\\facebook_two\\src\\components\\Posts\\CommentAdd.js",["182","183","184"],"import { useState } from \"react\"\r\n\r\nconst CommentAdd = ({ postid, commentadd }) => {\r\n    const [userPic, setUserPic] = useState(localStorage.getItem(\"profile_pic\"));\r\n    const [commentText, setCommentText] = useState(\"\");\r\n    const [userId, setUserId] = useState(localStorage.getItem(\"user_id\"));\r\n    const onKeyUp = (e) => {\r\n        if (e.keyCode == 13) {\r\n            console.log(\"call api\", commentText, userId, postid);\r\n            commentadd(postid, commentText)\r\n        }\r\n    }\r\n    return (\r\n        <>\r\n            <div className=\"media\">\r\n                <img src={userPic} alt=\"\" className=\"link-icon link-radius\" />\r\n                <div className=\"media-body\">\r\n                    <input\r\n                        type=\"text\"\r\n                        value={commentText}\r\n                        className=\"form-control badge-pill ml-2\"\r\n                        placeholder=\"write your comments\"\r\n                        onChange={(e) => setCommentText(e.target.value)}\r\n                        onKeyUp={onKeyUp}\r\n                    />\r\n                </div>\r\n            </div>\r\n\r\n        </>\r\n    );\r\n};\r\n\r\nexport default CommentAdd;","D:\\frontend\\React JS\\facebook_two\\src\\components\\Profile\\Profile.js",["185","186","187","188","189"],"import { faEnvelope, faMobile, faUser } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { useState } from 'react';\r\nimport Nav from '../Home/Nav';\r\nimport { isEmailValid } from '../../Utils/generalFunctions';\r\nimport { forgotPasswordApi } from '../../apis/Login';\r\nimport { useHistory } from 'react-router';\r\nconst Profile = () => {\r\n\r\n\r\n    const history = useHistory();\r\n    //values\r\n    const [oldPword, setOldPword] = useState(\"\")\r\n    const [newPword, setNewPword] = useState(\"\")\r\n    const [confPword, setConfPword] = useState(\"\")\r\n\r\n    // forgot password values\r\n    const [viewForgotPword, setViewForgotPword] = useState(false);\r\n    const [email, setEmail] = useState(\"\");\r\n    const [emailErrorMsg, setEmailErrorMsg] = useState(\"\");\r\n    const [apiMsg, setApiErrorMsg] = useState(\"\");\r\n    const [apiErrorMsgClass, setApiErrorMsgClass] = useState(\"\");\r\n\r\n    //error messages\r\n    const [oldPwordMsg, setOldPwordMsg] = useState(\"\")\r\n    const [newPwordMsg, setNewPwordMsg] = useState(\"\")\r\n    const [confPwordMsg, setConfPwordMsg] = useState(\"\")\r\n\r\n    //function\r\n    const changePassword = () => {\r\n\r\n        let numberOfErrors = 0;\r\n\r\n        if (oldPword.length < 8) {\r\n            setOldPwordMsg(\"Min 8 characters\");\r\n            numberOfErrors = 1;\r\n        }\r\n        else {\r\n            setOldPwordMsg(\"\")\r\n        }\r\n\r\n        if (newPword.length < 8) {\r\n            setNewPwordMsg(\"Min 8 characters\");\r\n            numberOfErrors = 1;\r\n\r\n        }\r\n        else {\r\n            if (newPword != confPword) {\r\n                setConfPwordMsg(\"not matching with new password\");\r\n                numberOfErrors = 1;\r\n\r\n            }\r\n            else {\r\n                setConfPwordMsg(\"\");\r\n            }\r\n            setNewPwordMsg(\"\");\r\n\r\n        }\r\n        if (oldPword == newPword) {\r\n            setNewPwordMsg(\"it should not match with old password\");\r\n            numberOfErrors = 1;\r\n        }\r\n        else {\r\n            setNewPwordMsg(\"\");\r\n        }\r\n\r\n        if (numberOfErrors == 0) {\r\n            // console.log(\"call api,no errors\");\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    const enableForgotPasswordView = () => {\r\n        setViewForgotPword(true);\r\n    }\r\n\r\n    const resetPassword = () => {\r\n        if (isEmailValid(email) == false) {\r\n            setEmailErrorMsg(\"enter a valid email\")\r\n        }\r\n        else {\r\n            setEmailErrorMsg(\"\");\r\n            // console.log(\"call api\", email);\r\n            forgotPasswordApi(\"react app\", email).then((response) => {\r\n                console.log(response);\r\n                if (response.data.result == \"success\") {\r\n                    setApiErrorMsgClass(\"alert alert-success\");\r\n\r\n                    setApiErrorMsg(response.data.msg);\r\n                }\r\n                else {\r\n                    setApiErrorMsgClass(\"alert alert-danger\");\r\n                    setApiErrorMsg(response.data.msg);\r\n                }\r\n            }\r\n            )\r\n        }\r\n    }\r\n\r\n\r\n    const logout =() =>{\r\n        localStorage.clear();\r\n        history.push(\"/\");\r\n    };\r\n    return (\r\n        <div className=\"container fixed-top-padding\">\r\n            <Nav />\r\n            <div className=\"row\">\r\n                <div className=\"col-lg-4\">\r\n                    <div className=\"card fb-shadow border-0\">\r\n                        <div className=\"card-body\">\r\n                            <div className=\"media\">\r\n                                <img\r\n                                    className=\"link-icon link-radius\"\r\n                                    alt=\"\"\r\n                                    src=\"https://static-assets-web.flixcart.com/www/linchpin/fk-cp-zion/img/profile-pic-male_4811a1.svg\"\r\n                                />\r\n                                <div className=\"media-body pl-2\">\r\n                                    <h2>Hello {localStorage.getItem(\"user_name\")}</h2>\r\n                                <div className=\"text-primary\" onClick={logout}>Logout</div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-lg-8 pb-4 mb-4\">\r\n\r\n                    <div className=\"card fb-shadow border-0\">\r\n                        <div className=\"card-body\">\r\n                            <div className=\"row\">\r\n                                <div className=\"col-lg-12\">\r\n                                    <h4>Your profile data</h4>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"row\">\r\n                                <div className=\"col-lg-12 p-2\">\r\n                                    <FontAwesomeIcon icon={faUser} /> Bhargava\r\n                                </div>\r\n                                <div className=\"col-lg-12 p-2\">\r\n                                    <FontAwesomeIcon icon={faEnvelope} /> bhargava@gmail.com\r\n                                </div>\r\n                                <div className=\"col-lg-12 p-2\">\r\n                                    <FontAwesomeIcon icon={faMobile} /> 8916943646\r\n                                </div>\r\n\r\n\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    {/* profile data end*/}\r\n                    {/* change password */}\r\n                    <div className=\"card fb-shadow border-0 mt-3\">\r\n                        <div className=\"card-body\">\r\n                            <div className=\"row\">\r\n                                <div className=\"col-lg-12\">\r\n                                    <label><small>Old Password</small></label>\r\n                                    <input type=\"password\" className=\"form-control m-1\" vlaue={oldPword} onChange={e => setOldPword(e.target.value)} placeholder=\"old password\" />\r\n                                    <span className=\"text-danger\">{oldPwordMsg}</span>\r\n                                </div>\r\n                                <div className=\"col-lg-12\">\r\n                                    <label><small>New Password</small></label>\r\n                                    <input type=\"password\" className=\"form-control m-1\" vlaue={newPword} onChange={e => setNewPword(e.target.value)} placeholder=\"new password\" />\r\n                                    <span className=\"text-danger\">{newPwordMsg}</span>\r\n                                </div>\r\n                                <div className=\"col-lg-12\">\r\n                                    <label><small>Confarm Password</small></label>\r\n                                    <input type=\"password\" className=\"form-control m-1\" vlaue={confPword} onChange={e => setConfPword(e.target.value)} placeholder=\"re-enter new password\" />\r\n                                    <span className=\"text-danger\">{confPwordMsg}</span>\r\n                                </div>\r\n\r\n                                <div className=\"col-lg-12 m-1\">\r\n                                    <button type=\"button\" className=\"btn btn-primary\" onClick={changePassword}>change password</button>\r\n\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    {/* change password end */}\r\n\r\n                    {/* forget password */}\r\n\r\n                    <div className=\"card fb-shadow border-0 mt-3\">\r\n                        <div className=\"card-body\">\r\n                            <button className=\"btn btn-danger\" onClick={enableForgotPasswordView}>Forgot Password</button>\r\n                            {viewForgotPword && (<div className=\"row\">\r\n                                <div className=\"col-lg-12\">\r\n                                    <label>EMAIL</label>\r\n                                    <input type=\"email\" placeholder=\"Email\" value={email} onChange={e => setEmail(e.target.value)} className=\"form-control\" />\r\n                                    <span className=\"text-danger\">{emailErrorMsg}</span>\r\n                                </div>\r\n                                <div className=\"col-lg-12 mt-4\">\r\n                                    <button type=\"button\" className=\"btn btn-success\" onClick={resetPassword}>Reset Password</button>\r\n                                </div>\r\n                                <div className=\"col-lg-12\">\r\n                                    <div className={apiErrorMsgClass}>\r\n                                        {apiMsg}\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            )}\r\n                        </div>\r\n                    </div>\r\n                    {/* forget password end */}\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile;","D:\\frontend\\React JS\\facebook_two\\src\\Utils\\generalFunctions.js",["190"],"export const isEmailValid =(email) =>{\r\n    let regex = /^([a-zA-Z0-9_.+-])+\\@(([a-zA-Z0-9-])+\\.)+([a-zA-Z0-9]{2,4})+$/;\r\nreturn regex.test(email);\r\n}","D:\\frontend\\React JS\\facebook_two\\src\\components\\Profile\\RecoverPassword.js",["191","192","193","194","195"],"import queryString from 'query-string';\r\nimport { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { resetPasswordApi } from '../../apis/Login';\r\nconst RecoverPassword = () => {\r\n\r\n    // query paramenters\r\n    let params = queryString.parse(window.location.search);\r\n    const [hash, setHash] = useState(params.hash);\r\n    const [ref, setRef] = useState(params.ref);\r\n\r\n    // values\r\n    const [pword, setPword] = useState(\"\");\r\n    const [confPword, setConfPword] = useState(\"\");\r\n    const [apiSuccess, setApiSuccess] = useState(false);\r\n    const [pwrodMsg, setPwordMsg] = useState(\"\");\r\n    const [confPwordMsg, setConfPwordMsg] = useState(\"\");\r\n    const [apiMsg, setApiMsg] = useState(\"\");\r\n\r\n\r\n\r\n    const updatePassword = () => {\r\n\r\n        if (pword.length < 8) {\r\n            setPwordMsg('min 8 characters');\r\n        }\r\n        else {\r\n            if (pword != confPword) {\r\n                setConfPwordMsg(\"Not matching\")\r\n            }\r\n            else {\r\n                //   console.log(pword,hash,ref);\r\n                resetPasswordApi(\"react app\", pword, confPword, ref, hash).then(\r\n                    (response) => {\r\n                        if (response.data.result == \"success\") {\r\n                            setApiSuccess(true);\r\n                        } else {\r\n                            setApiSuccess(false);\r\n                            setApiMsg(response.data.msg);\r\n                        }\r\n                    }\r\n                );\r\n            }\r\n        }\r\n    }\r\n    return (\r\n        <>\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-lg-3\"></div>\r\n\r\n                    <div className=\"col-lg-6 mt-3 text-center\">\r\n                        <div className=\"card shadow border-0\">\r\n                            <div className=\"card-body\">\r\n                                <h2>Set new password</h2>\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-lg-12\">\r\n                                        <label><small>PASSWORD</small></label>\r\n                                        <input type=\"text\" className=\"form-control\" placeholder=\"new password\" value={pword} onChange={e => setPword(e.target.value)} />\r\n                                        <span className=\"text-danger\">{pwrodMsg}</span>\r\n                                    </div>\r\n                                    <div className=\"col-lg-12\">\r\n                                        <label><small>COMFIRM PASSWORD</small></label>\r\n                                        <input type=\"text\" className=\"form-control\" placeholder=\"Confirm password\" value={confPword} onChange={e => setConfPword(e.target.value)} />\r\n                                        <span className=\"text-danger\">{confPwordMsg}</span>\r\n                                    </div>\r\n                                    <div className=\"col-lg-12 mt-3\">\r\n                                        <button type=\"button\" className=\"btn btn-success\" onClick={updatePassword}>Update Password</button>\r\n                                        <span className=\"text-danger\">{apiMsg}</span>\r\n                                        {\r\n                                            apiSuccess == true && (\r\n                                                <div className=\"alert alert-success mt-3\">\r\n                                                    password updated successfully.{\" \"}\r\n                                                    <Link to=\"/\">Click here to Login</Link>\r\n                                                </div>\r\n                                            )}\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"col-lg-3\"></div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\nexport default RecoverPassword;\r\n\r\n\r\n// http://localhost:3000/recover_password?ref=14&hash=c473379aa643d3b3e598ee9c6c8bb9fc&name=ram","D:\\frontend\\React JS\\facebook_two\\src\\components\\Addresses\\Addresses.js",["196","197","198","199","200","201","202","203","204","205","206","207","208","209"],"import { faPlus } from \"@fortawesome/free-solid-svg-icons\"\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\r\nimport { useState } from \"react\"\r\nimport Nav from \"../Home/Nav\"\r\nimport { getLocationFromCoords } from '../../apis/GeoLocation';\r\nconst Addresses = () => {\r\n    const [showAddAddressForm, setShowAddAddressForm] = useState(false);\r\n    const [addresses, setAddresses] = useState(\r\n        localStorage.getItem(\"addresses\") == null ? [] : \r\n        JSON.parse(localStorage.getItem(\"addresses\")));\r\n\r\n\r\n    // values\r\n    const [name, setName] = useState(\"\");\r\n    const [mobile, setMobile] = useState(\"\");\r\n    const [address, setAddress] = useState(\"\");\r\n    const [landMark, setLandMark] = useState(\"\");\r\n    const [city, setCity] = useState(\"\");\r\n    const [state, setState] = useState(\"\");\r\n    const [pincode, setPincode] = useState(\"\");\r\n    const [lat, setLat] = useState(\"\");\r\n    const [lon, setLon] = useState(\"\");\r\n    // errormsgs\r\n    const [nameMsg, setNameMsg] = useState(\"\");\r\n    const [mobileMsg, setMobileMsg] = useState(\"\");\r\n    const [addressMsg, setAddressMsg] = useState(\"\");\r\n    const [landMarkMsg, setLandMarkMsg] = useState(\"\");\r\n    const [cityMsg, setCityMsg] = useState(\"\");\r\n    const [stateMsg, setStateMsg] = useState(\"\");\r\n    const [pincodeMsg, setPincodeMsg] = useState(\"\");\r\n    const [apiMsg, setApiMsg] = useState(\"\");\r\n\r\n    const showAddAddressFormBtn = () => {\r\n        setShowAddAddressForm(true);\r\n    }\r\n\r\n    const hideAddressDialog = () => {\r\n        setShowAddAddressForm(false);\r\n    }\r\n\r\n    const accessUserLocation = () => {\r\n        if (navigator.geolocation) {\r\n            navigator.geolocation.getCurrentPosition(userLocation);\r\n        }\r\n    };\r\n\r\n    const userLocation = (location) => {\r\n        // console.log(location.coords.latitude,location.coords.longitude);\r\n        setLat(location.coords.latitude);\r\n        setLon(location.coords.longitude);\r\n        getLocationFromCoords(location.coords.latitude, location.coords.longitude).then((response) => {\r\n            console.log(response.data);\r\n            let data = response.data;\r\n            if (data.status === \"OK\") {\r\n                console.log(data);\r\n                let address = data.results[0];\r\n                console.log(address);\r\n                setAddress(address.formatted_address) //formatted_address is complete address\r\n                address.address_components.map((component) => {\r\n                    component.types.map((type) => {\r\n                        if (type == \"postal_code\") {\r\n                            setPincode(component.long_name);\r\n                        }\r\n                        if (type == \"administrative_area_level_1\") {\r\n                            setState(component.long_name);\r\n                        }\r\n                        if (type == \"administrative_area_level_2\") {\r\n                            setCity(component.long_name);\r\n                        }\r\n\r\n                    })\r\n                });\r\n                //results\r\n                //formatted_address\r\n                //address_components\r\n                //long_name\r\n                //types\r\n                //\"postal_code\"\r\n                //\"country\", adm\r\n            }\r\n        })\r\n    };\r\n\r\n    const saveAddress = () => {\r\n        let newAddress = {\r\n            \"name\": name,\r\n            \"mobile\": mobile,\r\n            \"address\": address,\r\n            \"landMark\": landMark,\r\n            \"city\": city,\r\n            \"state\": state,\r\n            \"pincode\": pincode,\r\n            \"lat\": lat,\r\n            \"lon\": lon,\r\n        };\r\n\r\n        addresses.push(newAddress);\r\n\r\n        setAddresses([...addresses]);\r\n        localStorage.setItem(\"addresses\", JSON.stringify(addresses))\r\n    };\r\n\r\n    return (\r\n        <div className=\"container fixed-top-padding\">\r\n            <Nav />\r\n            <div className=\"row\">\r\n                <div className=\"col-lg-2\"> </div>\r\n                <div className=\"col-lg-7\">\r\n                    <div className=\"card fb-shadow border-0\">\r\n                        <div className=\"card-body\">\r\n                            <button\r\n                                type=\"button\"\r\n                                className=\"btn btn-primary\"\r\n                                onClick={showAddAddressFormBtn}>\r\n                                <FontAwesomeIcon icon={faPlus} />Add Address\r\n                            </button>\r\n\r\n                            <div className=\"row\">\r\n                                {addresses.map((address, i) =>\r\n                                    <div className=\"col-lg-12 mb-4\" key={i}>\r\n                                    <div className=\"bg-danger\">    Name:{address.name}</div><br />\r\n                                    Mobile:{address.mobile}<br />\r\n                                    Landmark:{address.landMark}<br />\r\n                                    City:{address.city}<br />\r\n                                    State:{address.state}<br />\r\n                                    Pincode:{address.pincode}<br />\r\n                                    Directions:<a href={\"http://maps.google.com/maps?q=\" + address.lat + \",\" + address.lon} target=\"_blank\">Click to navigate</a>\r\n\r\n                                    </div>\r\n                                )}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            {showAddAddressForm && (<div className=\"modal fade show fb-modal\" tabIndex=\"-1\">\r\n                <div className=\"modal-dialog\">\r\n                    <div className=\"modal-content\">\r\n                        <div className=\"modal-header\">\r\n                            <h5 className=\"modal-title\">Add Address</h5>\r\n                            <button\r\n                                type=\"button\"\r\n                                className=\"close\"\r\n                                data-dismiss=\"modal\"\r\n                                aria-label=\"Close\"\r\n                                onClick={hideAddressDialog}\r\n                            >\r\n                                <span aria-hidden=\"true\">&times;</span>\r\n                            </button>\r\n                        </div>\r\n                        <div className=\"modal-body\">\r\n                            <div className=\"row\">\r\n                                <div className=\"col-lg-12\">\r\n                                    <button type=\"button\" className=\"btn btn-warning\" onClick={accessUserLocation}>use Current Location</button>\r\n                                </div>\r\n                                <div className=\"col-lg-12 pt-4\">\r\n                                    <input type=\"text\" placeholder=\"Name\" value={name} className=\"form-control\" onChange={(e) => setName(e.target.value)} />\r\n                                    <span className=\"text-danger\">{nameMsg}</span>\r\n                                </div>\r\n                                <div className=\"col-lg-12 pt-4\">\r\n                                    <input type=\"text\" placeholder=\"mobile\" value={mobile} className=\"form-control\" onChange={(e) => setMobile(e.target.value)} />\r\n                                    <span className=\"text-danger\">{mobileMsg}</span>\r\n                                </div>\r\n                                <div className=\"col-lg-12 pt-4\">\r\n                                    <input type=\"text\" placeholder=\"Address\" value={address} onChange={(e) => setAddress(e.target.value)} className=\"form-control\" />\r\n                                    <span className=\"text-danger\">{addressMsg}</span>\r\n                                </div>\r\n                                <div className=\"col-lg-12 pt-4\">\r\n                                    <input type=\"text\" placeholder=\"landMark\" value={landMark} onChange={(e) => setLandMark(e.target.value)} className=\"form-control\" />\r\n                                    <span className=\"text-danger\">{landMarkMsg}</span>\r\n                                </div>\r\n                                <div className=\"col-lg-12 pt-4\">\r\n                                    <input type=\"text\" placeholder=\"city\" value={city} onChange={(e) => setCity(e.target.value)} className=\"form-control\" />\r\n                                    <span className=\"text-danger\">{cityMsg}</span>\r\n                                </div>\r\n                                <div className=\"col-lg-12 pt-4\">\r\n                                    <select value={state} className=\"custom-select\" onChange={(e) => setState(e.target.value)}>\r\n                                        <option value=\"\">Select state</option>\r\n                                        <option value=\"AndraPradesh\">AndraPradesh</option>\r\n                                        <option value=\"Telangana\">Telangana</option>\r\n                                        <option value=\"Karnataka\">Karnataka</option>\r\n                                    </select>\r\n                                    <span className=\"text-danger\">{stateMsg}</span>\r\n                                </div>\r\n                                <div className=\"col-lg-12 pt-4\">\r\n                                    <input type=\"text\" placeholder=\"pincode\" value={pincode} onChange={(e) => setPincode(e.target.value)} className=\"form-control\" />\r\n                                    <span className=\"text-danger\">{pincodeMsg}</span>\r\n                                </div>\r\n                                <div className=\"col-lg-12 mt-4\">\r\n                                    <button\r\n                                        type=\"button\"\r\n                                        className=\"btn btn-primary\"\r\n                                        onClick={saveAddress}\r\n                                    >\r\n                                        Add Address\r\n                                    </button>\r\n                                    <span className=\"text-danger\">{apiMsg}</span>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\nexport default Addresses;","D:\\frontend\\React JS\\facebook_two\\src\\apis\\GeoLocation.js",[],"D:\\frontend\\React JS\\facebook_two\\src\\components\\Files\\Files.js",["210","211","212","213","214","215","216","217","218","219","220","221"]," import { useState } from 'react';\r\nimport { uploadFileApi } from '../../apis/Files';\r\nimport Nav from '../Home/Nav';\r\nimport DragAndDrop from './DragAndDrop';\r\n// import DragAndDrop from \"./DragAndDrop\";\r\n\r\nconst Files = () => {\r\n\r\n    //Message\r\n    const [fileMsg, setFileMsg] = useState(\"\")\r\n    const [apiMsg, setApiMsg] = useState(\"\");\r\n\r\n    //value\r\n    const [file, setFile] = useState([]);\r\n    const [allowedMimeTypes, setAllowedMimeTypes] = useState([\r\n        \"image/bmp\",\r\n        \"image/gif\",\r\n        \"image/jpeg\",\r\n        \"image/png\",\r\n        \"image/svg+xml\",\r\n        \"image/webm\"\r\n    ]);\r\n    const [imagePath, setImagePath] = useState(\"\");\r\n\r\n    const uploadFile = () => {\r\n        let noOfErrors = 0;\r\n        let fileTypeError = 1;\r\n        console.log(file);\r\n        if (file.length == 0) {\r\n            noOfErrors = 1;\r\n            setFileMsg(\"Please select image\");\r\n        }\r\n        if (file.length > 0) {\r\n            allowedMimeTypes.map((type) => {\r\n                if (type == file[0].type) {\r\n                    fileTypeError = 0;\r\n                }\r\n            });\r\n            if (fileTypeError == 1) {\r\n                noOfErrors = 1;\r\n                setFileMsg(\"Images only allowed\");\r\n            }\r\n            else {\r\n                //1 kb = 1024 bytes\r\n                //1 mb = 1024 KB\r\n                //2 MB = 2 * 1024 * 1024 bytes\r\n                // setFileMsg(\"\");\r\n                if (file[0].size > 2097152){\r\n                    noOfErrors = 1;\r\n                    setFileMsg(\"Max allowed size is 2 MB\");\r\n                }\r\n                else {\r\n                    setFileMsg(\"\");\r\n                }\r\n            }\r\n        }\r\n        if (noOfErrors == 0) {\r\n            uploadFileApi(\"react app\", file[0]).then(\r\n                (response) => {\r\n                    // console.log(response);\r\n                    if (response.data.result === \"success\") {\r\n                        setApiMsg(response.data.data.imagePath);\r\n                        setImagePath(response.data.data.imagePath);\r\n                    }\r\n                    else {\r\n                        setApiMsg(response.data.msg);\r\n                    }\r\n                }\r\n            )\r\n        }\r\n    };\r\n\r\n    //resume varibles\r\n\r\n    const[doc,setDoc] =  useState([]);\r\n    const[docMsg,setDocMsg] = useState(\"\");\r\n    const[docApiMsg,setDocApiMsg] = useState(\"\");\r\n    const[allowedDocTypes,setAllowedDocTypes] = useState([\r\n        \"application/msword\",\r\n        \"application/vnd.openxmlformats-officedocument.wordprocessingml.document\",\r\n        \"application/pdf\",\r\n        \"text/plain\",\r\n    ]);\r\n\r\n    const [docPath,setDocPath] = useState(\"\");\r\n\r\n    const uploadDoc = ()=>{\r\n        console.log(doc);\r\n        let noOfErrors = 0 ;\r\n        let fileTypeError =1;\r\n        if(doc.length === 0) {\r\n            setDocMsg(\"please select document\");\r\n            noOfErrors = 1 ;\r\n        }\r\n        else{\r\n            setDocMsg(\"\");\r\n        }\r\n\r\n        if(doc.length > 0) {\r\n            allowedDocTypes.map((type) =>{\r\n                if(type== doc[0].type){\r\n                    fileTypeError = 0;\r\n                } \r\n            });\r\n\r\n            if(fileTypeError == 1 ) {\r\n                noOfErrors = 1 ;\r\n                setDocMsg(\"please select word or pdf or text files\")\r\n            }\r\n            else{\r\n                if(doc[0].size > 2097152) {\r\n                    noOfErrors = 1 ;\r\n                    setDocMsg(\"Max 2MB only allowed\");\r\n                }\r\n                else {\r\n                    setDocMsg(\"\");\r\n                }\r\n            }\r\n        }\r\n        if(noOfErrors === 0 ){\r\n            uploadFileApi(\"react app\",doc[0]).then((response) =>{\r\n                // console.log(response);\r\n                if(response.data.result == \"success\") {\r\n                    setDocPath(response.data.data.imagePath);\r\n                }\r\n                else{\r\n                    setDocApiMsg(response.data.msg);\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <div className=\"container fixed-top-padding\">\r\n                <Nav />\r\n                <div className=\"row\">\r\n                    <div className=\"col-lg-2\"></div>\r\n                    <div className=\"col-lg-7\">\r\n                        <div className=\"card shadow border-0\">\r\n                            <div className=\"card-body\">\r\n                                <h3>File uploads</h3>\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-lg-12 mt-4\">\r\n                                        <label>SELECT FILE</label>\r\n                                        <div className=\"custom-file\">\r\n                                            <input\r\n                                                type=\"file\"\r\n                                                className=\"custom-file-input\"\r\n                                                onChange={(e) => setFile(e.target.files)}\r\n                                            />\r\n                                            <label className=\"custom-file-label\" htmlFor=\"imputGroupFile2\" >\r\n                                                Choose file\r\n                                        </label>\r\n                                        </div>\r\n                                        <span className=\"text-danger\">{fileMsg}</span>\r\n                                    </div>\r\n                                    <div className=\"col-lg-12 mt-4 mb-3\">\r\n                                        <button\r\n                                            type=\"button\"\r\n                                            className=\"btn btn-primary\"\r\n                                            onClick={uploadFile}>Upload File</button>\r\n\r\n                                    </div>\r\n                                    <div className=\"col-lg-12 mt-4\">\r\n                                        <p>{apiMsg}</p>\r\n                                    </div>\r\n                                    <div className=\"col-lg-12 mt-4\">\r\n                                        {imagePath.length > 0 && \r\n                                        <img src={imagePath} alt=\"\"\r\n                                    className=\"img-fluid\"/>\r\n                                }\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                {/* pdf or document uploader */}\r\n                <div className=\"row mt-4\">\r\n                <div className=\"col-lg-2\"></div>  \r\n                    <div className=\"col-lg-7\">\r\n                        <div className=\"card shadow border-0\">\r\n                            <div className=\"card-body\">\r\n                                <h3>Upload Resume</h3>\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-lg-12 mt-4\">\r\n                                        <label>SELECT FILE</label>\r\n                                        <div className=\"custom-file\">\r\n                                            <input\r\n                                                type=\"file\"\r\n                                                className=\"custom-file-input\"\r\n                                                onChange={(e) => setDoc(e.target.files)}\r\n                                            />\r\n                                            <label className=\"custom-file-label\" htmlFor=\"imputGroupFile2\">\r\n                                                Choose file\r\n                                        </label>\r\n                                        </div>\r\n                                        <span className=\"text-danger\">{docMsg}</span>\r\n                                    </div>\r\n                                    <div className=\"col-lg-12 mt-4 mb-3\">\r\n                                        <button\r\n                                            type=\"button\"\r\n                                            className=\"btn btn-primary\"\r\n                                            onClick={uploadDoc}>Upload documents</button>\r\n\r\n                                    </div>\r\n                                    <div className=\"col-lg-12 mt-4\">\r\n                                        <p>{docApiMsg}</p>\r\n                                    </div>\r\n                                     <div className=\"col-lg-12 mt-4\">\r\n                                       {docPath.length > 0 && (\r\n                                             <iframe\r\n                                             src={\r\n                                               \"https://docs.google.com/gview?url=\" +\r\n                                               docPath +\r\n                                               \"&embedded=true\"\r\n                                             }\r\n                                             className=\"doc-viewer\"\r\n                                             frameBorder=\"0\"\r\n                                             s crolling=\"auto\"\r\n                                             height=\"100%\"\r\n                                             width=\"100%\"\r\n                                           ></iframe>\r\n                                        )}\r\n                                    </div> \r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <DragAndDrop/>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Files;","D:\\frontend\\React JS\\facebook_two\\src\\apis\\Files.js",[],"D:\\frontend\\React JS\\facebook_two\\src\\components\\Data\\data.js",[],"D:\\frontend\\React JS\\facebook_two\\src\\components\\Files\\DragAndDrop.js",["222","223","224","225","226","227","228","229"],"import { useCallback, useState } from 'react';\r\nimport { useDropzone } from 'react-dropzone';\r\nimport { uploadFileApi } from '../../apis/Files';\r\n\r\nconst DragAndDrop = () => {\r\n\r\n    const [allowedMimeTypes, setAllowedMimeTypes] = useState([\r\n        \"image/bmp\",\r\n        \"image/gif\",\r\n        \"image/jpeg\",\r\n        \"image/png\",\r\n        \"image/svg+xml\",\r\n        \"image/webm\"\r\n    ]);\r\n\r\n    const [valideFilesMsg, setValidFilesMsg] = useState(\"\");\r\n    const[images, setImages] = useState([]);\r\n\r\n    const onDrop = useCallback((files) => {\r\n        let validFilesCount = 0;\r\n        files.map((file) => {\r\n            // console.log(file);\r\n\r\n            let typeMatching = 0;\r\n            allowedMimeTypes.map(type => {\r\n                if (type == file.type) {\r\n                    typeMatching = 1;\r\n                }\r\n            });\r\n            if (typeMatching == 1) {\r\n                if (file.size < 2097152) {\r\n                    validFilesCount = validFilesCount + 1;\r\n                    // console.log(\"call api\");\r\n                    uploadFileApi(\"react app\",file).then(\r\n                        (response) =>{\r\n                            if(response.data.result == \"success\"){\r\n                                images.push(response.data.data.imagePath)\r\n                                        setImages( images ); \r\n                            }\r\n                        }\r\n                    )\r\n                }\r\n            }\r\n\r\n        });\r\n        setValidFilesMsg(validFilesCount + \" out of \" + files.length + \" files uploaded\");\r\n    }, []);\r\n    const { getRootProps, getInputProps, isDragActive } = useDropzone({ onDrop });\r\n\r\n\r\n    return (\r\n        <>\r\n            <div className=\"row mt-4 mb-4\">\r\n                <div className=\"col-lg-2\">  </div>\r\n                <div className=\"col-lg-7\">\r\n                    <div className=\"card shadow border-0\">\r\n                        <div className=\"card-body\" {...getRootProps()}>\r\n                            <input {...getInputProps()} />\r\n                Drag and Drop files here\r\n                </div>\r\n                        <div className=\"card-body mt-3 text-center\">\r\n                            <p className=\"mb-3\"> {valideFilesMsg} </p>\r\n                            <p>\r\n                                {\r\n                                    images.map((image,i )=>( \r\n                                        // <p key={i}>{ image }</p>))\r\n                                        <img src={image} alt=\"\" className=\"image-fluid\" key={i}/>))\r\n                                    }\r\n                            </p>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>  \r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default DragAndDrop;","D:\\frontend\\React JS\\facebook_two\\src\\components\\Data\\Data.js",["230","231","232","233","234","235","236"],"import { useState } from \"react\";\r\nimport Nav from \"../Home/Nav\";\r\n\r\nconst Data = () => {\r\n\r\n    const [name, setName] = useState(\"\");\r\n    const [nameMsg, setNameMsg] = useState(\"\");\r\n\r\n\r\n\r\n\r\n    const [addCard, setAddCard] = useState(\r\n        localStorage.getItem(\"addCard\") == null ? [] :\r\n            JSON.parse(localStorage.getItem(\"addCard\"))\r\n    );\r\n\r\n    const [showUpdate, setShowUpdate] = useState(false);\r\n    const [editName, setEditName] = useState(\"\");\r\n    const [editNameMsg, setEditNameMsg] = useState(\"\");\r\n    const [editMsg, setEditMsg] = useState(\"\");\r\n    const [editFriendId, setEditFriendId] = useState(\"\");\r\n\r\n    const addData = () => {\r\n\r\n        if (name.length < 2) {\r\n            setNameMsg(\"add min 4 char\");\r\n        }\r\n        else {\r\n            setNameMsg(\"\");\r\n\r\n            let newCard = {\r\n                name: name,\r\n                id: addCard.length,\r\n            };\r\n\r\n            // setAddCard([...addCard, newCard]);\r\n            addCard.push(newCard);\r\n            setAddCard([...addCard]);\r\n            localStorage.setItem(\"addCard\", JSON.stringify(addCard));\r\n\r\n        };\r\n\r\n    };\r\n\r\n    const deleteFriend = (e) => {\r\n        console.log(\"delete clicked\");\r\n\r\n        var index = e.target.getAttribute(\"index\");\r\n        var newData = addCard.filter((friend, i) => {\r\n            return index != i;\r\n        });\r\n        console.log(newData);\r\n        setAddCard([...newData]);\r\n        localStorage.setItem(\"addCard\", JSON.stringify(newData));\r\n    };\r\n\r\n    const delteFrinedNewMethod = (e) => {\r\n\r\n        let frinedId = e.target.getAttribute(\"index\");\r\n        //  console.log(frinedId);\r\n        let newFriends = addCard.filter((frined, i) => {\r\n            return frined.id != frinedId;\r\n        });\r\n        setAddCard([...newFriends]);\r\n        localStorage.setItem(\"addCard\", JSON.stringify(newFriends));\r\n    };\r\n\r\n    const editFriend = (e) => { \r\n        setShowUpdate(true);\r\n        let id = e.target.getAttribute(\"friendid\");\r\n        let friendName = \" \";\r\n        addCard.map(friend => {\r\n            if (friend.id == id) {\r\n                friendName = friend.name;\r\n            }\r\n        });\r\n        console.log(friendName);\r\n        setEditName(friendName);\r\n        setEditFriendId(id);\r\n\r\n    };\r\n\r\n    const updateFriendName = () => {\r\n        if (editName.length <= 1) {\r\n            setEditNameMsg(\"min 2 characters\");\r\n        }\r\n        else {\r\n            let newData = addCard.map(friend => {\r\n                if (friend.id == editFriendId) {\r\n                    friend.name = editName;\r\n                }\r\n                return friend;\r\n            });\r\n            setAddCard([...newData]);\r\n            setShowUpdate(false);\r\n            setEditName(\"\");\r\n            setEditFriendId(\"\");\r\n            localStorage.setItem(\"addCard\", JSON.stringify(newData));\r\n        }\r\n\r\n    };\r\n    return (\r\n        <>\r\n            <div className=\"container fixed-top-padding\">\r\n                <Nav />\r\n                <div className=\"row\">\r\n                    <div className=\"col-lg-12\">\r\n                        <input type=\"text\" placeholder=\"name\" value={name} onChange={(e) => setName(e.target.value)} />\r\n                        <small className=\"text-danger\">{nameMsg}</small>\r\n                    </div>\r\n                    <div className=\"col-lg-12 mt-3\">\r\n                        <button type=\"button\" className=\"btn btn-primary\" onClick={addData}>Click</button>\r\n                    </div>\r\n                </div>\r\n\r\n\r\n                {showUpdate && <div className=\"row\">\r\n                    <div className=\"col-lg-2\"></div>\r\n                    <div className=\"col-lg-7\">\r\n                        <div className=\"card shadow border-0 mt-4 p-3\">\r\n                            <div className=\"card-data\">\r\n                                <label><small>Friend Name</small></label>\r\n                                <input type=\"text\" placeholder=\"frined name\" value={editName} onChange={e => setEditName(e.target.value)} className=\"form-control\" />\r\n                                <div className=\"text-warning\"><small>{editNameMsg}</small></div>\r\n                                <button type=\"button\" className=\"btn btn-success  mt-3\" onClick={updateFriendName}>Update Name</button>\r\n                                <div className=\"text-success\"><small>{editMsg}</small></div>\r\n\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                }\r\n                <div className=\"row\">\r\n                    <div className=\"col-lg-2\"></div>\r\n                    <div className=\"col-lg-7\">\r\n                        {addCard.map((card, i) => (\r\n                            <div className=\"card shadow border-0 mt-4 p-3\" key={i}>\r\n                                <div className=\"card-data\">\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-lg-9 \">{card.name}</div>\r\n                                        <div className=\"col-lg-3 text-right\">\r\n\r\n                                            <span\r\n                                                friendid={card.id}\r\n                                                className=\"fb-pointer\"\r\n                                                onClick={editFriend}\r\n                                            >\r\n                                                Edit\r\n                                            </span>\r\n                                            &nbsp;&nbsp;&nbsp;&nbsp;\r\n                                            <span\r\n                                                index={card.id}  // {i}\r\n                                                className='fb-pointer'\r\n                                                onClick={delteFrinedNewMethod}\r\n                                            >\r\n                                                Delete\r\n                                            </span>\r\n                                        </div>\r\n                                    </div>\r\n                                </div> <br />\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Data;","D:\\frontend\\React JS\\facebook_two\\src\\components\\Data\\TwinData.js",["237"],"import { useState } from \"react\";\r\nimport Nav from '../Home/Nav';\r\nconst TwinData=()=>{\r\n\r\n\r\nconst [name,setName] = useState(\"\");\r\nconst [nameMsg,setNameMsg] = useState(\"\");\r\nconst [number,setNumber] = useState(\"\");\r\nconst [numberMsg,setNumberMsg] = useState(\"\");\r\n\r\nconst [idCard,setIdCard] = useState(\r\n    localStorage.getItem(\"idCard\") == null ? []\r\n    : JSON.parse(localStorage.getItem(\"idCard\"))\r\n);\r\n\r\nconst addFriend=() =>{\r\n    if(name.length > 2) {\r\n        setNameMsg(\"\");\r\n\r\n        let newCard= {\r\n            \"name\":name,\r\n            \"number\":number,\r\n        };\r\n        idCard.push(newCard);\r\n        setIdCard([...idCard]);\r\n        localStorage.setItem(\"idCard\",JSON.stringify(idCard));\r\n    }\r\n    else{\r\n        setNameMsg(\"min 2 charactars\");\r\n    }\r\n}\r\n    return(\r\n        <>\r\n\r\n        <div className=\"container fixed-top-padding\">\r\n            <Nav/>\r\n            <div className=\"row\">\r\n                <div className=\"col-lg-2\"></div>\r\n                <div className=\"col-lg-7\">\r\n                    <h2>add frinend</h2>\r\n                    <div className=\"card shadow mt-4 p-3\">\r\n                        <div className=\"card-data\">\r\n                            <input type=\"text\" className=\"form-control\" placeholder=\"enter friend name\" value={name} onChange={(e) => setName(e.target.value)}/>\r\n                            <div className=\"text-danger\">{nameMsg}</div>\r\n                            <input type=\"text\" className=\"form-control\" placeholder=\"enter friend name\" value={number} onChange={(e) => setNumber(e.target.value)}/>\r\n\r\n                       <div className=\"text-danger\">{numberMsg}</div>\r\n                       <button className=\"btn btn-primary mt-3\" onClick={addFriend}>add friend</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default TwinData;","D:\\frontend\\React JS\\facebook_two\\src\\components\\Data\\DataTwo.js",["238","239"],"import { useState } from \"react\";\r\n\r\nconst DataTwo = () => {\r\n\r\n    const [name, setName] = useState(\"\");\r\n    const [nameMsg, setNameMsg] = useState(\"\");\r\n\r\n\r\n    const [dataTwo, setDataTwo] = useState(\r\n        localStorage.getItem(\"dataTwo\") == null\r\n            ? []\r\n            : JSON.parse(localStorage.getItem(\"dataTwo\"))\r\n    );\r\n\r\n    const addFriend = () => {\r\n        dataTwo.push(name);\r\n        setDataTwo([...dataTwo]);\r\n        localStorage.setItem(\"dataTwo\", JSON.stringify(dataTwo))\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <div className=\"container  fixed-top-padding\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-lg-2\"></div>\r\n                    <div className=\"col-lg-7\">\r\n                        <div className=\"card shadow border-0 mt-4 p-3\">\r\n                            <div className=\"card-data\">\r\n                                <label>\r\n                                    <input type=\"text\"\r\n                                        className=\"form-control\"\r\n                                        placeholder=\"your friend name\"\r\n                                        value={name}\r\n                                        onChange={(e) => setName(e.target.value)}\r\n                                    />\r\n                                </label>\r\n                                <button className=\"btn btn-primary\" onClick={addFriend}>click</button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"row\">\r\n                    {/* <div className=\"col-lg-12\"> */}\r\n                    {dataTwo.map((data, i) => (\r\n                        <div className=\"col-lg-12\" key={i}>\r\n                            <div className=\"card-data\">\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-lg-9\">\r\n                                        {data}\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n            </div>\r\n            {/* </div> */}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default DataTwo;",{"ruleId":"240","replacedBy":"241"},{"ruleId":"242","replacedBy":"243"},{"ruleId":"244","severity":1,"message":"245","line":39,"column":12,"nodeType":"246","messageId":"247","endLine":39,"endColumn":25},{"ruleId":"244","severity":1,"message":"248","line":39,"column":27,"nodeType":"246","messageId":"247","endLine":39,"endColumn":43},{"ruleId":"249","severity":1,"message":"250","line":46,"column":41,"nodeType":"251","messageId":"252","endLine":46,"endColumn":42,"suggestions":"253"},{"ruleId":"254","severity":1,"message":"255","line":49,"column":31,"nodeType":"256","messageId":"257","endLine":49,"endColumn":33},{"ruleId":"254","severity":1,"message":"255","line":64,"column":31,"nodeType":"256","messageId":"257","endLine":64,"endColumn":33},{"ruleId":"254","severity":1,"message":"255","line":68,"column":37,"nodeType":"256","messageId":"257","endLine":68,"endColumn":39},{"ruleId":"249","severity":1,"message":"250","line":111,"column":41,"nodeType":"251","messageId":"252","endLine":111,"endColumn":42,"suggestions":"258"},{"ruleId":"254","severity":1,"message":"255","line":119,"column":33,"nodeType":"256","messageId":"257","endLine":119,"endColumn":35},{"ruleId":"254","severity":1,"message":"255","line":135,"column":28,"nodeType":"256","messageId":"257","endLine":135,"endColumn":30},{"ruleId":"254","severity":1,"message":"259","line":139,"column":33,"nodeType":"256","messageId":"257","endLine":139,"endColumn":35},{"ruleId":"254","severity":1,"message":"255","line":148,"column":23,"nodeType":"256","messageId":"257","endLine":148,"endColumn":25},{"ruleId":"254","severity":1,"message":"255","line":154,"column":37,"nodeType":"256","messageId":"257","endLine":154,"endColumn":39},{"ruleId":"254","severity":1,"message":"255","line":13,"column":29,"nodeType":"256","messageId":"257","endLine":13,"endColumn":31},{"ruleId":"260","severity":1,"message":"261","line":26,"column":17,"nodeType":"262","endLine":26,"endColumn":55},{"ruleId":"244","severity":1,"message":"263","line":2,"column":8,"nodeType":"246","messageId":"247","endLine":2,"endColumn":12},{"ruleId":"244","severity":1,"message":"264","line":6,"column":23,"nodeType":"246","messageId":"247","endLine":6,"endColumn":35},{"ruleId":"244","severity":1,"message":"265","line":8,"column":20,"nodeType":"246","messageId":"247","endLine":8,"endColumn":29},{"ruleId":"254","severity":1,"message":"255","line":19,"column":32,"nodeType":"256","messageId":"257","endLine":19,"endColumn":34},{"ruleId":"254","severity":1,"message":"255","line":33,"column":42,"nodeType":"256","messageId":"257","endLine":33,"endColumn":44},{"ruleId":"254","severity":1,"message":"255","line":37,"column":42,"nodeType":"256","messageId":"257","endLine":37,"endColumn":44},{"ruleId":"254","severity":1,"message":"255","line":51,"column":42,"nodeType":"256","messageId":"257","endLine":51,"endColumn":44},{"ruleId":"254","severity":1,"message":"255","line":54,"column":46,"nodeType":"256","messageId":"257","endLine":54,"endColumn":48},{"ruleId":"254","severity":1,"message":"255","line":68,"column":42,"nodeType":"256","messageId":"257","endLine":68,"endColumn":44},{"ruleId":"254","severity":1,"message":"255","line":71,"column":46,"nodeType":"256","messageId":"257","endLine":71,"endColumn":48},{"ruleId":"266","severity":1,"message":"267","line":50,"column":17,"nodeType":"262","messageId":"268","endLine":50,"endColumn":61,"fix":"269"},{"ruleId":"254","severity":1,"message":"259","line":57,"column":43,"nodeType":"256","messageId":"257","endLine":57,"endColumn":45},{"ruleId":"254","severity":1,"message":"259","line":61,"column":43,"nodeType":"256","messageId":"257","endLine":61,"endColumn":45},{"ruleId":"254","severity":1,"message":"255","line":61,"column":77,"nodeType":"256","messageId":"257","endLine":61,"endColumn":79},{"ruleId":"254","severity":1,"message":"259","line":71,"column":46,"nodeType":"256","messageId":"257","endLine":71,"endColumn":48},{"ruleId":"254","severity":1,"message":"255","line":71,"column":80,"nodeType":"256","messageId":"257","endLine":71,"endColumn":82},{"ruleId":"254","severity":1,"message":"255","line":91,"column":47,"nodeType":"256","messageId":"257","endLine":91,"endColumn":49},{"ruleId":"254","severity":1,"message":"255","line":98,"column":47,"nodeType":"256","messageId":"257","endLine":98,"endColumn":49},{"ruleId":"244","severity":1,"message":"265","line":5,"column":20,"nodeType":"246","messageId":"247","endLine":5,"endColumn":29},{"ruleId":"244","severity":1,"message":"270","line":4,"column":21,"nodeType":"246","messageId":"247","endLine":4,"endColumn":31},{"ruleId":"244","severity":1,"message":"265","line":6,"column":20,"nodeType":"246","messageId":"247","endLine":6,"endColumn":29},{"ruleId":"254","severity":1,"message":"255","line":8,"column":23,"nodeType":"256","messageId":"257","endLine":8,"endColumn":25},{"ruleId":"254","severity":1,"message":"259","line":48,"column":26,"nodeType":"256","messageId":"257","endLine":48,"endColumn":28},{"ruleId":"254","severity":1,"message":"255","line":59,"column":22,"nodeType":"256","messageId":"257","endLine":59,"endColumn":24},{"ruleId":"254","severity":1,"message":"255","line":67,"column":28,"nodeType":"256","messageId":"257","endLine":67,"endColumn":30},{"ruleId":"254","severity":1,"message":"255","line":80,"column":33,"nodeType":"256","messageId":"257","endLine":80,"endColumn":35},{"ruleId":"254","severity":1,"message":"255","line":88,"column":42,"nodeType":"256","messageId":"257","endLine":88,"endColumn":44},{"ruleId":"249","severity":1,"message":"250","line":2,"column":37,"nodeType":"251","messageId":"252","endLine":2,"endColumn":38,"suggestions":"271"},{"ruleId":"244","severity":1,"message":"272","line":9,"column":18,"nodeType":"246","messageId":"247","endLine":9,"endColumn":25},{"ruleId":"244","severity":1,"message":"273","line":10,"column":17,"nodeType":"246","messageId":"247","endLine":10,"endColumn":23},{"ruleId":"254","severity":1,"message":"259","line":28,"column":23,"nodeType":"256","messageId":"257","endLine":28,"endColumn":25},{"ruleId":"254","severity":1,"message":"255","line":35,"column":50,"nodeType":"256","messageId":"257","endLine":35,"endColumn":52},{"ruleId":"254","severity":1,"message":"255","line":71,"column":56,"nodeType":"256","messageId":"257","endLine":71,"endColumn":58},{"ruleId":"244","severity":1,"message":"274","line":24,"column":21,"nodeType":"246","messageId":"247","endLine":24,"endColumn":31},{"ruleId":"244","severity":1,"message":"275","line":25,"column":23,"nodeType":"246","messageId":"247","endLine":25,"endColumn":35},{"ruleId":"244","severity":1,"message":"276","line":26,"column":24,"nodeType":"246","messageId":"247","endLine":26,"endColumn":37},{"ruleId":"244","severity":1,"message":"277","line":27,"column":25,"nodeType":"246","messageId":"247","endLine":27,"endColumn":39},{"ruleId":"244","severity":1,"message":"278","line":28,"column":21,"nodeType":"246","messageId":"247","endLine":28,"endColumn":31},{"ruleId":"244","severity":1,"message":"279","line":29,"column":22,"nodeType":"246","messageId":"247","endLine":29,"endColumn":33},{"ruleId":"244","severity":1,"message":"280","line":30,"column":24,"nodeType":"246","messageId":"247","endLine":30,"endColumn":37},{"ruleId":"244","severity":1,"message":"281","line":31,"column":20,"nodeType":"246","messageId":"247","endLine":31,"endColumn":29},{"ruleId":"282","severity":1,"message":"283","line":59,"column":60,"nodeType":"284","messageId":"285","endLine":59,"endColumn":62},{"ruleId":"282","severity":1,"message":"283","line":60,"column":48,"nodeType":"284","messageId":"285","endLine":60,"endColumn":50},{"ruleId":"254","severity":1,"message":"255","line":61,"column":34,"nodeType":"256","messageId":"257","endLine":61,"endColumn":36},{"ruleId":"254","severity":1,"message":"255","line":64,"column":34,"nodeType":"256","messageId":"257","endLine":64,"endColumn":36},{"ruleId":"254","severity":1,"message":"255","line":67,"column":34,"nodeType":"256","messageId":"257","endLine":67,"endColumn":36},{"ruleId":"266","severity":1,"message":"267","line":127,"column":48,"nodeType":"262","messageId":"268","endLine":127,"endColumn":141,"fix":"286"},{"ruleId":"244","severity":1,"message":"287","line":15,"column":30,"nodeType":"246","messageId":"247","endLine":15,"endColumn":49},{"ruleId":"254","severity":1,"message":"255","line":29,"column":25,"nodeType":"256","messageId":"257","endLine":29,"endColumn":27},{"ruleId":"282","severity":1,"message":"283","line":34,"column":41,"nodeType":"284","messageId":"285","endLine":34,"endColumn":43},{"ruleId":"254","severity":1,"message":"255","line":35,"column":26,"nodeType":"256","messageId":"257","endLine":35,"endColumn":28},{"ruleId":"254","severity":1,"message":"255","line":39,"column":31,"nodeType":"256","messageId":"257","endLine":39,"endColumn":33},{"ruleId":"254","severity":1,"message":"255","line":57,"column":24,"nodeType":"256","messageId":"257","endLine":57,"endColumn":26},{"ruleId":"244","severity":1,"message":"288","line":78,"column":27,"nodeType":"246","messageId":"247","endLine":78,"endColumn":45},{"ruleId":"282","severity":1,"message":"283","line":100,"column":40,"nodeType":"284","messageId":"285","endLine":100,"endColumn":42},{"ruleId":"254","severity":1,"message":"255","line":101,"column":24,"nodeType":"256","messageId":"257","endLine":101,"endColumn":26},{"ruleId":"254","severity":1,"message":"255","line":106,"column":30,"nodeType":"256","messageId":"257","endLine":106,"endColumn":32},{"ruleId":"254","severity":1,"message":"255","line":123,"column":41,"nodeType":"256","messageId":"257","endLine":123,"endColumn":43},{"ruleId":"289","severity":1,"message":"290","line":214,"column":46,"nodeType":"262","endLine":225,"endColumn":45},{"ruleId":"244","severity":1,"message":"287","line":7,"column":30,"nodeType":"246","messageId":"247","endLine":7,"endColumn":49},{"ruleId":"282","severity":1,"message":"283","line":21,"column":26,"nodeType":"284","messageId":"285","endLine":21,"endColumn":28},{"ruleId":"282","severity":1,"message":"283","line":25,"column":39,"nodeType":"284","messageId":"285","endLine":25,"endColumn":41},{"ruleId":"254","severity":1,"message":"255","line":26,"column":26,"nodeType":"256","messageId":"257","endLine":26,"endColumn":28},{"ruleId":"254","severity":1,"message":"255","line":30,"column":30,"nodeType":"256","messageId":"257","endLine":30,"endColumn":32},{"ruleId":"254","severity":1,"message":"255","line":36,"column":53,"nodeType":"256","messageId":"257","endLine":36,"endColumn":55},{"ruleId":"291","severity":1,"message":"292","line":47,"column":8,"nodeType":"293","endLine":47,"endColumn":10,"suggestions":"294"},{"ruleId":"244","severity":1,"message":"295","line":48,"column":42,"nodeType":"246","messageId":"247","endLine":48,"endColumn":54},{"ruleId":"244","severity":1,"message":"296","line":20,"column":21,"nodeType":"246","messageId":"247","endLine":20,"endColumn":31},{"ruleId":"244","severity":1,"message":"297","line":45,"column":11,"nodeType":"246","messageId":"247","endLine":45,"endColumn":23},{"ruleId":"254","severity":1,"message":"259","line":50,"column":26,"nodeType":"256","messageId":"257","endLine":50,"endColumn":28},{"ruleId":"254","severity":1,"message":"259","line":62,"column":30,"nodeType":"256","messageId":"257","endLine":62,"endColumn":32},{"ruleId":"282","severity":1,"message":"283","line":72,"column":28,"nodeType":"284","messageId":"285","endLine":72,"endColumn":30},{"ruleId":"254","severity":1,"message":"255","line":73,"column":27,"nodeType":"256","messageId":"257","endLine":73,"endColumn":29},{"ruleId":"254","severity":1,"message":"255","line":89,"column":31,"nodeType":"256","messageId":"257","endLine":89,"endColumn":33},{"ruleId":"244","severity":1,"message":"298","line":9,"column":18,"nodeType":"246","messageId":"247","endLine":9,"endColumn":30},{"ruleId":"244","severity":1,"message":"299","line":6,"column":12,"nodeType":"246","messageId":"247","endLine":6,"endColumn":19},{"ruleId":"244","severity":1,"message":"274","line":6,"column":21,"nodeType":"246","messageId":"247","endLine":6,"endColumn":31},"no-native-reassign",["300"],"no-negated-in-lhs",["301"],"no-unused-vars","'crGenderErMsg' is assigned a value but never used.","Identifier","unusedVar","'setCrGenderErMsg' is assigned a value but never used.","no-useless-escape","Unnecessary escape character: \\@.","Literal","unnecessaryEscape",["302","303"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",["304","305"],"Expected '!==' and instead saw '!='.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'snow' is defined but never used.","'setLinksData' is assigned a value but never used.","'setUserId' is assigned a value but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","noTargetBlank",{"range":"306","text":"307"},"'setUserPic' is assigned a value but never used.",["308","309"],"'setHash' is assigned a value but never used.","'setRef' is assigned a value but never used.","'setNameMsg' is assigned a value but never used.","'setMobileMsg' is assigned a value but never used.","'setAddressMsg' is assigned a value but never used.","'setLandMarkMsg' is assigned a value but never used.","'setCityMsg' is assigned a value but never used.","'setStateMsg' is assigned a value but never used.","'setPincodeMsg' is assigned a value but never used.","'setApiMsg' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside",{"range":"310","text":"307"},"'setAllowedMimeTypes' is assigned a value but never used.","'setAllowedDocTypes' is assigned a value but never used.","jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.","react-hooks/exhaustive-deps","React Hook useCallback has missing dependencies: 'allowedMimeTypes' and 'images'. Either include them or remove the dependency array. You can also do a functional update 'setImages(i => ...)' if you only need 'images' in the 'setImages' call.","ArrayExpression",["311"],"'isDragActive' is assigned a value but never used.","'setEditMsg' is assigned a value but never used.","'deleteFriend' is assigned a value but never used.","'setNumberMsg' is assigned a value but never used.","'nameMsg' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"messageId":"312","fix":"313","desc":"314"},{"messageId":"315","fix":"316","desc":"317"},{"messageId":"312","fix":"318","desc":"314"},{"messageId":"315","fix":"319","desc":"317"},[1751,1751]," rel=\"noreferrer\"",{"messageId":"312","fix":"320","desc":"314"},{"messageId":"315","fix":"321","desc":"317"},[5193,5193],{"desc":"322","fix":"323"},"removeEscape",{"range":"324","text":"325"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"326","text":"327"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"328","text":"325"},{"range":"329","text":"327"},{"range":"330","text":"325"},{"range":"331","text":"327"},"Update the dependencies array to be: [allowedMimeTypes, images]",{"range":"332","text":"333"},[1667,1668],"",[1667,1667],"\\",[3579,3580],[3579,3579],[76,77],[76,76],[1569,1571],"[allowedMimeTypes, images]"]