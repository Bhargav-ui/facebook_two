{"ast":null,"code":"var _jsxFileName = \"D:\\\\frontend\\\\React JS\\\\facebook_two\\\\src\\\\components\\\\Files\\\\DragAndDrop.js\",\n    _s = $RefreshSig$();\n\nimport { useCallback, useState } from 'react';\nimport { useDropzone } from 'react-dropzone';\nimport { uploadFileApi } from '../../apis/Files';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst DragAndDrop = () => {\n  _s();\n\n  const [allowedMimeTypes, setAllowedMimeTypes] = useState([\"image/bmp\", \"image/gif\", \"image/jpeg\", \"image/png\", \"image/svg+xml\", \"image/webm\"]);\n  const [valideFilesMsg, setValidFilesMsg] = useState(\"\");\n  const [images, setImages] = useState([]);\n  const onDrop = useCallback(files => {\n    let validFilesCount = 0;\n    files.map(file => {\n      // console.log(file);\n      let typeMatching = 0;\n      allowedMimeTypes.map(type => {\n        if (type == file.type) {\n          typeMatching = 1;\n        }\n      });\n\n      if (typeMatching == 1) {\n        if (file.size < 2097152) {\n          validFilesCount = validFilesCount + 1; // console.log(\"call api\");\n\n          uploadFileApi(\"react app\", file).then(response => {\n            if (response.data.result == \"success\") {\n              setImages(images.push(response.data.data.imagePath));\n            }\n          });\n        }\n      }\n    });\n    setValidFilesMsg(validFilesCount + \" out of \" + files.length + \" files uploaded\");\n  }, []);\n  const {\n    getRootProps,\n    getInputProps,\n    isDragActive\n  } = useDropzone({\n    onDrop\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row mt-4 mb-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-lg-2\",\n        children: \"  \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-lg-7\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card shadow border-0\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-body\",\n            ...getRootProps(),\n            children: [/*#__PURE__*/_jsxDEV(\"input\", { ...getInputProps()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 29\n            }, this), \"Drag and Drop files here\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-body mt-3 text-center\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\" \", valideFilesMsg, \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(DragAndDrop, \"ZuGQ9FdM4rh2+epgDX7mRyOqsF8=\", false, function () {\n  return [useDropzone];\n});\n\n_c = DragAndDrop;\nexport default DragAndDrop;\n\nvar _c;\n\n$RefreshReg$(_c, \"DragAndDrop\");","map":{"version":3,"sources":["D:/frontend/React JS/facebook_two/src/components/Files/DragAndDrop.js"],"names":["useCallback","useState","useDropzone","uploadFileApi","DragAndDrop","allowedMimeTypes","setAllowedMimeTypes","valideFilesMsg","setValidFilesMsg","images","setImages","onDrop","files","validFilesCount","map","file","typeMatching","type","size","then","response","data","result","push","imagePath","length","getRootProps","getInputProps","isDragActive"],"mappings":";;;AAAA,SAASA,WAAT,EAAsBC,QAAtB,QAAsC,OAAtC;AACA,SAASC,WAAT,QAA4B,gBAA5B;AACA,SAASC,aAAT,QAA8B,kBAA9B;;;;AAEA,MAAMC,WAAW,GAAG,MAAM;AAAA;;AAEtB,QAAM,CAACC,gBAAD,EAAmBC,mBAAnB,IAA0CL,QAAQ,CAAC,CACrD,WADqD,EAErD,WAFqD,EAGrD,YAHqD,EAIrD,WAJqD,EAKrD,eALqD,EAMrD,YANqD,CAAD,CAAxD;AASA,QAAM,CAACM,cAAD,EAAiBC,gBAAjB,IAAqCP,QAAQ,CAAC,EAAD,CAAnD;AACA,QAAK,CAACQ,MAAD,EAASC,SAAT,IAAsBT,QAAQ,CAAC,EAAD,CAAnC;AAEA,QAAMU,MAAM,GAAGX,WAAW,CAAEY,KAAD,IAAW;AAClC,QAAIC,eAAe,GAAG,CAAtB;AACAD,IAAAA,KAAK,CAACE,GAAN,CAAWC,IAAD,IAAU;AAChB;AAEA,UAAIC,YAAY,GAAG,CAAnB;AACAX,MAAAA,gBAAgB,CAACS,GAAjB,CAAqBG,IAAI,IAAI;AACzB,YAAIA,IAAI,IAAIF,IAAI,CAACE,IAAjB,EAAuB;AACnBD,UAAAA,YAAY,GAAG,CAAf;AACH;AACJ,OAJD;;AAKA,UAAIA,YAAY,IAAI,CAApB,EAAuB;AACnB,YAAID,IAAI,CAACG,IAAL,GAAY,OAAhB,EAAyB;AACrBL,UAAAA,eAAe,GAAGA,eAAe,GAAG,CAApC,CADqB,CAErB;;AACAV,UAAAA,aAAa,CAAC,WAAD,EAAaY,IAAb,CAAb,CAAgCI,IAAhC,CACKC,QAAD,IAAa;AACT,gBAAGA,QAAQ,CAACC,IAAT,CAAcC,MAAd,IAAwB,SAA3B,EAAqC;AACzBZ,cAAAA,SAAS,CAACD,MAAM,CAACc,IAAP,CAAYH,QAAQ,CAACC,IAAT,CAAcA,IAAd,CAAmBG,SAA/B,CAAD,CAAT;AACX;AACJ,WALL;AAOH;AACJ;AAEJ,KAvBD;AAwBAhB,IAAAA,gBAAgB,CAACK,eAAe,GAAG,UAAlB,GAA+BD,KAAK,CAACa,MAArC,GAA8C,iBAA/C,CAAhB;AACH,GA3ByB,EA2BvB,EA3BuB,CAA1B;AA4BA,QAAM;AAAEC,IAAAA,YAAF;AAAgBC,IAAAA,aAAhB;AAA+BC,IAAAA;AAA/B,MAAgD1B,WAAW,CAAC;AAAES,IAAAA;AAAF,GAAD,CAAjE;AAGA,sBACI;AAAA,2BACI;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA,8BACI;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA,+BACI;AAAK,UAAA,SAAS,EAAC,sBAAf;AAAA,kCACI;AAAK,YAAA,SAAS,EAAC,WAAf;AAAA,eAA+Be,YAAY,EAA3C;AAAA,oCACI,sBAAWC,aAAa;AAAxB;AAAA;AAAA;AAAA;AAAA,oBADJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAKI;AAAK,YAAA,SAAS,EAAC,4BAAf;AAAA,mCACI;AAAA,8BAAKpB,cAAL;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBALJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ,mBADJ;AAmBH,CAhED;;GAAMH,W;UA0CoDF,W;;;KA1CpDE,W;AAkEN,eAAeA,WAAf","sourcesContent":["import { useCallback, useState } from 'react';\r\nimport { useDropzone } from 'react-dropzone';\r\nimport { uploadFileApi } from '../../apis/Files';\r\n\r\nconst DragAndDrop = () => {\r\n\r\n    const [allowedMimeTypes, setAllowedMimeTypes] = useState([\r\n        \"image/bmp\",\r\n        \"image/gif\",\r\n        \"image/jpeg\",\r\n        \"image/png\",\r\n        \"image/svg+xml\",\r\n        \"image/webm\"\r\n    ]);\r\n\r\n    const [valideFilesMsg, setValidFilesMsg] = useState(\"\");\r\n    const[images, setImages] = useState([]);\r\n\r\n    const onDrop = useCallback((files) => {\r\n        let validFilesCount = 0;\r\n        files.map((file) => {\r\n            // console.log(file);\r\n\r\n            let typeMatching = 0;\r\n            allowedMimeTypes.map(type => {\r\n                if (type == file.type) {\r\n                    typeMatching = 1;\r\n                }\r\n            });\r\n            if (typeMatching == 1) {\r\n                if (file.size < 2097152) {\r\n                    validFilesCount = validFilesCount + 1;\r\n                    // console.log(\"call api\");\r\n                    uploadFileApi(\"react app\",file).then(\r\n                        (response) =>{\r\n                            if(response.data.result == \"success\"){\r\n                                        setImages(images.push(response.data.data.imagePath));\r\n                            }\r\n                        }\r\n                    )\r\n                }\r\n            }\r\n\r\n        });\r\n        setValidFilesMsg(validFilesCount + \" out of \" + files.length + \" files uploaded\");\r\n    }, []);\r\n    const { getRootProps, getInputProps, isDragActive } = useDropzone({ onDrop });\r\n\r\n\r\n    return (\r\n        <>\r\n            <div className=\"row mt-4 mb-4\">\r\n                <div className=\"col-lg-2\">  </div>\r\n                <div className=\"col-lg-7\">\r\n                    <div className=\"card shadow border-0\">\r\n                        <div className=\"card-body\" {...getRootProps()}>\r\n                            <input {...getInputProps()} />\r\n                Drag and Drop files here\r\n                </div>\r\n                        <div className=\"card-body mt-3 text-center\">\r\n                            <p> {valideFilesMsg} </p>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>  \r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default DragAndDrop;"]},"metadata":{},"sourceType":"module"}